name: Release on Main Branch Change

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get previous version
        id: get-previous-version
        run: echo "::set-output name=previous_version::$(git show HEAD~1:package.json | jq -r .version)"

      - name: Get current version
        id: get-current-version
        run: echo "::set-output name=current_version::$(node -pe "require('./package.json').version")"

      - name: Check if version is incremented
        id: check-version
        run: |
          if [[ "${{ steps.get-previous-version.outputs.previous_version }}" == "${{ steps.get-current-version.outputs.current_version }}" ]]; then
            echo "::set-output name=version_incremented::false"
          else
            echo "::set-output name=version_incremented::true"
          fi

      - name: Fail if version is not incremented
        run: |
          if [[ "${{ steps.check-version.outputs.version_incremented }}" == "false" ]]; then
            echo "Error: The version has not been incremented."
            exit 1
          fi

      - name: Create tag
        run: git tag ${{ steps.get-current-version.outputs.current_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Push tag
        run: git push origin ${{ steps.get-current-version.outputs.current_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get-current-version.outputs.current_version }}
          release_name: Release ${{ steps.get-current-version.outputs.current_version }}
          body: |
            Release ${{ steps.get-current-version.outputs.current_version }}
          draft: false
          prerelease: false
